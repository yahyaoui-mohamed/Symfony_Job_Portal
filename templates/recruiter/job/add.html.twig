{% extends 'base.html.twig' %}

{% block title %} Add job {% endblock %}

{% block body %}
		<div class="d-flex">
				<div class="admin">
					{% include 'recruiter_sidebar.html.twig' %}
			</div>
			<div class="container">
					<div class="content">
					
						{{ form_start(form) }}
					
						<h1 class="mb-3">Add job</h1>
					
						<div class="form-group mb-3">
							{{ form_widget(form.name, {'attr': {'class': 'form-control', 'placeholder':'Name'}}) }}
						</div>

						<div class="form-group mb-3">
							{{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder':'Description'}}) }}
						</div>

						<div class="form-group mb-3">
							{{ form_row(form.requirements) }}
						</div>


						<div class="experiences-entry mb-3">
							{{ form_row(form.experiences)}}
						</div>

						<div class="missions-entry mb-3">
							{{ form_row(form.missions)}}
						</div>


						<div class="form-group mb-3">
							{{ form_widget(form.minsalary, {'attr': {'class': 'form-control', 'placeholder':'Min Salary'}})  }}
						</div>

						<div class="form-group mb-3">
							{{ form_widget(form.maxsalary, {'attr': {'class': 'form-control', 'placeholder':'Max Salary'}})  }}
						</div>


						<div class="form-group mb-3">
							{{ form_widget(form.type, {'attr': {'class': 'form-control', 'placeholder':'Type'}})  }}
						</div>

						<div class="form-group mb-3">
							{{ form_widget(form.country, {'attr': {'class': 'form-control', 'placeholder':'Country'}})  }}
						</div>


						<div class="form-group mb-3">
							{{ form_widget(form.city, {'attr': {'class': 'form-control', 'placeholder':'City'}})  }}
						</div>

						<div class="form-group mb-3">
							{{ form_widget(form.post, {'attr': {'class': 'btn btn-primary'}}) }}
						</div>


						{{ form_end(form) }}

					</div>

			</div>
		</div>



	{% endblock %}


	{% block js %}
		<script>
			let dropdown = document.querySelector(".account-dropdown");
			let avatar = document.querySelector(".avatar");
			let account = document.querySelector(".account");
			avatar.addEventListener("click", function() {
					if (dropdown.classList.contains("show")) {
							dropdown.classList.remove("show");
					} else {
							dropdown.classList.add("show");
					}
			});

			document.addEventListener("click", function(e) {
					if (dropdown.classList.contains("show")) {
							if (!account.contains(e.target)) {
									dropdown.classList.remove("show");
							}
					}
			});



			document.addEventListener('DOMContentLoaded', function() {
					const collectionHolder = document.querySelector('.experiences-collection');
					const addButton = document.createElement('button');
					addButton.innerText = 'Add Experience';
					addButton.type = 'button';
					addButton.classList.add("btn");
					addButton.classList.add("btn-success");
					addButton.classList.add("mb-3");
					collectionHolder.appendChild(addButton);

					addButton.addEventListener('click', function() {
							const prototype = collectionHolder.dataset.prototype;
							const index = collectionHolder.dataset.index || collectionHolder.children.length;
							const newForm = prototype.replace(/__name__/g, index);
							collectionHolder.dataset.index = index + 1;
							collectionHolder.insertAdjacentHTML('beforeend', newForm);
					});

					collectionHolder.addEventListener('click', function(e) {
							if (e.target.classList.contains('remove-experience')) {
									e.target.closest('.experience-entry').remove();
							}
					});
			});

			document.addEventListener('DOMContentLoaded', function() {
					const collectionHolder = document.querySelector('.missions-collection');
					console.log(collectionHolder);
					const addButton = document.createElement('button');
					addButton.innerText = 'Add Mission';
					addButton.type = 'button';
					addButton.classList.add("btn");
					addButton.classList.add("btn-success");
					addButton.classList.add("mb-3");
					collectionHolder.appendChild(addButton);

					addButton.addEventListener('click', function() {
							const prototype = collectionHolder.dataset.prototype;
							const index = collectionHolder.dataset.index || collectionHolder.children.length;
							const newForm = prototype.replace(/__name__/g, index);
							collectionHolder.dataset.index = index + 1;
							collectionHolder.insertAdjacentHTML('beforeend', newForm);
					});

					collectionHolder.addEventListener('click', function(e) {
							if (e.target.classList.contains('remove-mission')) {
									e.target.closest('.mission-entry').remove();
							}
					});
			});

			document.addEventListener('DOMContentLoaded', function() {
					const collectionHolder = document.querySelector('.requirements-collection');
					const addButton = document.createElement('button');
					addButton.innerText = 'Add Requirement';
					addButton.type = 'button';
					addButton.classList.add("btn");
					addButton.classList.add("btn-success");
					addButton.classList.add("mb-3");
					collectionHolder.appendChild(addButton);

					addButton.addEventListener('click', function() {
							const prototype = collectionHolder.dataset.prototype;
							const index = collectionHolder.dataset.index || collectionHolder.children.length;
							const newForm = prototype.replace(/__name__/g, index);
							collectionHolder.dataset.index = index + 1;
							collectionHolder.insertAdjacentHTML('beforeend', newForm);
					});

					collectionHolder.addEventListener('click', function(e) {
							if (e.target.classList.contains('remove-requirement')) {
									e.target.closest('.requirement-entry').remove();
							}
					});
			});


	</script>

{% endblock  %}

